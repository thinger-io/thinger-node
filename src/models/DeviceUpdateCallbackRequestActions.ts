/**
 * Thinger.io Server API
 * Thinger.io Server API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http.js';

export class DeviceUpdateCallbackRequestActions {
    /**
    * A unique identifier for resources, consisting of alphanumeric characters, underscores, or hyphens, and limited to 32 characters.
    */
    'callEndpoint'?: string;
    /**
    * A unique identifier for resources, consisting of alphanumeric characters, underscores, or hyphens, and limited to 32 characters.
    */
    'sendProperty'?: string;
    /**
    * A unique identifier for resources, consisting of alphanumeric characters, underscores, or hyphens, and limited to 32 characters.
    */
    'setProperty'?: string;
    /**
    * A unique identifier for resources, consisting of alphanumeric characters, underscores, or hyphens, and limited to 32 characters.
    */
    'writeBucket'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "callEndpoint",
            "baseName": "call_endpoint",
            "type": "string",
            "format": ""
        },
        {
            "name": "sendProperty",
            "baseName": "send_property",
            "type": "string",
            "format": ""
        },
        {
            "name": "setProperty",
            "baseName": "set_property",
            "type": "string",
            "format": ""
        },
        {
            "name": "writeBucket",
            "baseName": "write_bucket",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return DeviceUpdateCallbackRequestActions.attributeTypeMap;
    }

    public constructor() {
    }
}
